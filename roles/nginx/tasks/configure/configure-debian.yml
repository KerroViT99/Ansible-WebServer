- name: Checking the sites-available directory for existence
  stat:
    path: /etc/nginx/sites-available
  register: sites_available_details

- name: Creating sites-available directory
  file:
    path: /etc/nginx/sites-available/
    state: directory
    mode: 0755
  when: not sites_available_details.stat.exists

- name: Checking the sites-enabled directory for existence
  stat:
    path: /etc/nginx/sites-enabled
  register: sites_enabled_details

- name: Creating sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled/
    state: directory
    mode: 0755
  when: not sites_enabled_details.stat.exists

- name: Setting up Nginx (without HTTPS)
  copy:
    src: files/nginx_http.conf
    dest: /etc/nginx/nginx.conf
    mode: 0644
  when: https['enable'] == "false"

- name: Setting up Nginx (with HTTPS)
  copy:
    src: files/nginx_https.conf
    dest: /etc/nginx/nginx.conf
    mode: 0644
  when: https['enable'] == "true"

- name: Checking the ansiblewebserver.configs directory for existence
  stat:
    path: /etc/nginx/ansiblewebserver.configs
  register: ansiblewebserver_configs_details

- name: Creating a directory for additional configuration files
  file:
    path: /etc/nginx/ansiblewebserver.configs
    mode: 0755
    state: directory
  when: not ansiblewebserver_configs_details.stat.exists

- name: Copying security.conf (without HTTPS)
  copy:
    src: files/security_http.conf
    dest: /etc/nginx/ansiblewebserver.configs/security.conf
    mode: 0644
  when: https['enable'] == "false"

- name: Copying security.conf (with HTTPS)
  copy:
    src: files/security_https.conf
    dest: /etc/nginx/ansiblewebserver.configs/security.conf
    mode: 0644
  when: https['enable'] == "true"

- name: Copying letsencrypt.conf
  copy:
    src: files/letsencrypt.conf
    dest: /etc/nginx/ansiblewebserver.configs/letsencrypt.conf
    mode: 0644
  when: https['enable'] == "true" and https['option'] == "2"

- name: Checking dhparam.pem file for existence
  stat:
    path: /etc/nginx/dhparam.pem
  register: dhparam_details

- name: Generation of Diffie-Hellman parameters
  openssl_dhparam:
    path: /etc/nginx/dhparam.pem
    size: 2048
    force: true
  when: https['enable'] == "true" and not dhparam_details.stat.exists

- name: Copying general.conf
  copy:
    src: files/general.conf
    dest: /etc/nginx/ansiblewebserver.configs/general.conf
    mode: 0644

- name: Copying proxy.conf (without HTTPS)
  copy:
    src: files/proxy_http.conf
    dest: /etc/nginx/ansiblewebserver.configs/proxy.conf
    mode: 0644
  when: https['enable'] == "false"

- name: Copying proxy.conf (with HTTPS)
  copy:
    src: files/proxy_https.conf
    dest: /etc/nginx/ansiblewebserver.configs/proxy.conf
    mode: 0644
  when: https['enable'] == "true"

- name: Creating a host (without HTTPS)
  template:
    src: templates/domain_http.conf.j2
    dest: /etc/nginx/sites-available/{{ domain['name'] }}.conf
    mode: 0644
  when: https['enable'] == "false"

- name: Creating a host (with HTTPS) (option 1)
  template:
    src: templates/domain_https.conf.j2
    dest: /etc/nginx/sites-available/{{ domain['name'] }}.conf
    mode: 0644
  when: https['enable'] == "true" and https['option'] == "1"

- name: Creating a host (with HTTPS) (option 2)
  template:
    src: templates/domain_letsencrypt.conf.j2
    dest: /etc/nginx/sites-available/{{ domain['name'] }}.conf
    mode: 0644
  when: https['enable'] == "true" and https['option'] == "2"

- name: Enabling the host
  file:
    src: /etc/nginx/sites-available/{{ domain['name'] }}.conf
    dest: /etc/nginx/sites-enabled/{{ domain['name'] }}.conf
    state: link
    force: true

- name: Restarting Nginx
  service:
    name: nginx
    state: restarted
    enabled: true
